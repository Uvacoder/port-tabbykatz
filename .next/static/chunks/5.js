(window["webpackJsonp_N_E"] = window["webpackJsonp_N_E"] || []).push([[5],{

/***/ "./portfolio/shell.md":
/*!****************************!*\
  !*** ./portfolio/shell.md ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"---\\ntitle: \\\"Ship$\\\"\\ndate: \\\"2020-04-17\\\"\\nog:\\n  description: \\\"SHELLter in Place, or Ship$, is a simple command line interpreter written in C.\\\"\\n  image: \\\"/shell.jpg\\\"\\nauthor:\\n  twitter: \\\"tabby__katz\\\"\\n  name: \\\"Tabitha O'Melay\\\"\\n---\\n\\n_This program was built during the COVID-19 pandemic & \\\"Shelter in Place\\\" order in California, USA. My parter Zac and I wrote our shell using a strtok function of our own design._\\n\\n```C\\n#include \\\"shell.h\\\"\\n/**\\n * _strtok - tokenizes the str\\n * @buffer: the string\\n * @delim: the dividing char\\n * Return: char * to token or NULL\\n */\\nchar *_strtok(char *buffer, const char *delim)\\n{\\n\\tstatic char *sp;\\n\\tchar *p;\\n\\tint letter = 0;\\n\\tint i = 0;\\n\\tint stop = 0;\\n\\n\\tif (buffer)\\n\\t\\tsp = buffer;\\n\\tp = sp;\\n\\twhile (sp && *sp)\\n\\t{\\n\\t\\twhile (delim[i])\\n\\t\\t{\\n\\t\\t\\tif (*sp == delim[i] && letter == 0)\\n\\t\\t\\t{\\n\\t\\t\\t\\t++p;\\n\\t\\t\\t\\t++sp;\\n\\t\\t\\t\\ti = 0;\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\t\\t\\tif (*sp == delim[i] && letter == 1)\\n\\t\\t\\t{\\n\\t\\t\\t\\t*sp++ = '\\\\0';\\n\\t\\t\\t\\tstop = 1;\\n\\t\\t\\t\\ti = 0;\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\t++i;\\n\\t\\t}\\n\\t\\tif (stop || !*sp)\\n\\t\\t\\tbreak;\\n\\t\\tletter = 1;\\n\\t\\ti = 0;\\n\\t\\t++sp;\\n\\t}\\n\\tif (!p || *p == '\\\\0')\\n\\t\\treturn (NULL);\\n\\treturn (p);\\n}\\n```\\n\\n# SHELLter in Place\\nWriting a shell is a software engineering rite of passage, and I expect I'll do\\nit again in the future, adding new features that seemed challenging to\\nbuild initially. I remember the days of using `bash` without thinking much of the innards. There\\nis always more to understand, and building it from scratch is a great way to\\nlearn.\\n\\n![](/shellimg.jpeg)\\n\\n\\n<p> <a href=\\\"https://github.com/zacwoll/simple_shell\\\" target=\\\"_blank\\\">Check it out on Github</a></p>\\n\\n\\n\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcG9ydGZvbGlvL3NoZWxsLm1kP2JhM2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBZSxrc0JBQW1vQixvQkFBb0IsWUFBWSxtQkFBbUIsY0FBYyxpQkFBaUIsbUNBQW1DLFdBQVcsMEJBQTBCLDZCQUE2QixvREFBb0QsY0FBYyxlQUFlLGdCQUFnQixtQkFBbUIsU0FBUyxvREFBb0Qsd0JBQXdCLG1CQUFtQixnQkFBZ0IsZ0JBQWdCLFNBQVMsWUFBWSxPQUFPLHFDQUFxQyxpQkFBaUIsWUFBWSxXQUFXLEtBQUssOENBQThDLGVBQWUsR0FBRywyZkFBMmYiLCJmaWxlIjoiLi9wb3J0Zm9saW8vc2hlbGwubWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIi0tLVxcbnRpdGxlOiBcXFwiU2hpcCRcXFwiXFxuZGF0ZTogXFxcIjIwMjAtMDQtMTdcXFwiXFxub2c6XFxuICBkZXNjcmlwdGlvbjogXFxcIlNIRUxMdGVyIGluIFBsYWNlLCBvciBTaGlwJCwgaXMgYSBzaW1wbGUgY29tbWFuZCBsaW5lIGludGVycHJldGVyIHdyaXR0ZW4gaW4gQy5cXFwiXFxuICBpbWFnZTogXFxcIi9zaGVsbC5qcGdcXFwiXFxuYXV0aG9yOlxcbiAgdHdpdHRlcjogXFxcInRhYmJ5X19rYXR6XFxcIlxcbiAgbmFtZTogXFxcIlRhYml0aGEgTydNZWxheVxcXCJcXG4tLS1cXG5cXG5fVGhpcyBwcm9ncmFtIHdhcyBidWlsdCBkdXJpbmcgdGhlIENPVklELTE5IHBhbmRlbWljICYgXFxcIlNoZWx0ZXIgaW4gUGxhY2VcXFwiIG9yZGVyIGluIENhbGlmb3JuaWEsIFVTQS4gTXkgcGFydGVyIFphYyBhbmQgSSB3cm90ZSBvdXIgc2hlbGwgdXNpbmcgYSBzdHJ0b2sgZnVuY3Rpb24gb2Ygb3VyIG93biBkZXNpZ24uX1xcblxcbmBgYENcXG4jaW5jbHVkZSBcXFwic2hlbGwuaFxcXCJcXG4vKipcXG4gKiBfc3RydG9rIC0gdG9rZW5pemVzIHRoZSBzdHJcXG4gKiBAYnVmZmVyOiB0aGUgc3RyaW5nXFxuICogQGRlbGltOiB0aGUgZGl2aWRpbmcgY2hhclxcbiAqIFJldHVybjogY2hhciAqIHRvIHRva2VuIG9yIE5VTExcXG4gKi9cXG5jaGFyICpfc3RydG9rKGNoYXIgKmJ1ZmZlciwgY29uc3QgY2hhciAqZGVsaW0pXFxue1xcblxcdHN0YXRpYyBjaGFyICpzcDtcXG5cXHRjaGFyICpwO1xcblxcdGludCBsZXR0ZXIgPSAwO1xcblxcdGludCBpID0gMDtcXG5cXHRpbnQgc3RvcCA9IDA7XFxuXFxuXFx0aWYgKGJ1ZmZlcilcXG5cXHRcXHRzcCA9IGJ1ZmZlcjtcXG5cXHRwID0gc3A7XFxuXFx0d2hpbGUgKHNwICYmICpzcClcXG5cXHR7XFxuXFx0XFx0d2hpbGUgKGRlbGltW2ldKVxcblxcdFxcdHtcXG5cXHRcXHRcXHRpZiAoKnNwID09IGRlbGltW2ldICYmIGxldHRlciA9PSAwKVxcblxcdFxcdFxcdHtcXG5cXHRcXHRcXHRcXHQrK3A7XFxuXFx0XFx0XFx0XFx0KytzcDtcXG5cXHRcXHRcXHRcXHRpID0gMDtcXG5cXHRcXHRcXHRcXHRjb250aW51ZTtcXG5cXHRcXHRcXHR9XFxuXFx0XFx0XFx0aWYgKCpzcCA9PSBkZWxpbVtpXSAmJiBsZXR0ZXIgPT0gMSlcXG5cXHRcXHRcXHR7XFxuXFx0XFx0XFx0XFx0KnNwKysgPSAnXFxcXDAnO1xcblxcdFxcdFxcdFxcdHN0b3AgPSAxO1xcblxcdFxcdFxcdFxcdGkgPSAwO1xcblxcdFxcdFxcdFxcdGJyZWFrO1xcblxcdFxcdFxcdH1cXG5cXHRcXHRcXHQrK2k7XFxuXFx0XFx0fVxcblxcdFxcdGlmIChzdG9wIHx8ICEqc3ApXFxuXFx0XFx0XFx0YnJlYWs7XFxuXFx0XFx0bGV0dGVyID0gMTtcXG5cXHRcXHRpID0gMDtcXG5cXHRcXHQrK3NwO1xcblxcdH1cXG5cXHRpZiAoIXAgfHwgKnAgPT0gJ1xcXFwwJylcXG5cXHRcXHRyZXR1cm4gKE5VTEwpO1xcblxcdHJldHVybiAocCk7XFxufVxcbmBgYFxcblxcbiMgU0hFTEx0ZXIgaW4gUGxhY2VcXG5Xcml0aW5nIGEgc2hlbGwgaXMgYSBzb2Z0d2FyZSBlbmdpbmVlcmluZyByaXRlIG9mIHBhc3NhZ2UsIGFuZCBJIGV4cGVjdCBJJ2xsIGRvXFxuaXQgYWdhaW4gaW4gdGhlIGZ1dHVyZSwgYWRkaW5nIG5ldyBmZWF0dXJlcyB0aGF0IHNlZW1lZCBjaGFsbGVuZ2luZyB0b1xcbmJ1aWxkIGluaXRpYWxseS4gSSByZW1lbWJlciB0aGUgZGF5cyBvZiB1c2luZyBgYmFzaGAgd2l0aG91dCB0aGlua2luZyBtdWNoIG9mIHRoZSBpbm5hcmRzLiBUaGVyZVxcbmlzIGFsd2F5cyBtb3JlIHRvIHVuZGVyc3RhbmQsIGFuZCBidWlsZGluZyBpdCBmcm9tIHNjcmF0Y2ggaXMgYSBncmVhdCB3YXkgdG9cXG5sZWFybi5cXG5cXG4hW10oL3NoZWxsaW1nLmpwZWcpXFxuXFxuXFxuPHA+IDxhIGhyZWY9XFxcImh0dHBzOi8vZ2l0aHViLmNvbS96YWN3b2xsL3NpbXBsZV9zaGVsbFxcXCIgdGFyZ2V0PVxcXCJfYmxhbmtcXFwiPkNoZWNrIGl0IG91dCBvbiBHaXRodWI8L2E+PC9wPlxcblxcblxcblxcblwiOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./portfolio/shell.md\n");

/***/ })

}]);